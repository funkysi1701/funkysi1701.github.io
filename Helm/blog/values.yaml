# Default values for blog.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: funkysi1701.azurecr.io/funkysi1701/blog
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: 
  - name: acr-secret
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 443

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Content-Security-Policy:
        base-uri 'self';
        frame-src 'self' https://assets.mailerlite.com https://platform.twitter.com https://www.googletagmanager.com https://www.youtube.com https://disqus.com https://docs.microsoft.com https://aka.ms https://ausi.github.io;
        img-src 'self' data: https://devblogs.microsoft.com https://digitalasset.intuit.com https://c.disquscdn.com https://referrer.disqus.com https://images.credly.com https://lh3.googleusercontent.com https://pbs.twimg.com https://dev-to-uploads.s3.amazonaws.com https://raw.githubusercontent.com https://c.bing.com https://c.clarity.ms https://www.google-analytics.com https://storageaccountblog9f5d.blob.core.windows.net https://res.cloudinary.com https://www.googletagmanager.com;
        connect-src 'self' https://analytics.ahrefs.com https://geo.privacymanager.io https://www.google.com https://liteanalytics.com https://stats.g.doubleclick.net https://region1.google-analytics.com https://dc.services.visualstudio.com https://*.clarity.ms https://www.clarity.ms https://www.google-analytics.com;
        object-src none;
        frame-ancestors 'self';
        form-action 'self';
        script-src 'self' https://funkysi1701.disqus.com https://www.googletagmanager.com https://liteanalytics.com https://code.jquery.com https://analytics.ahrefs.com https://www.clarity.ms https://www.jqueryscript.net 'sha256-BiwuZrVXy3edWc7f9+DMduhL62ZaEHbkdOh9lAvkQkU=' 'sha256-ThcITHmsiQTEJON5ri77go7MHepLSvNJITvYItpv0zY=' 'sha256-wbtpCOd/W9fnQQ1wjYspMDAc0AW63y/OkQG782HKWCg=' 'sha256-7kFRyFQow7v6ucXI8pGm+ZdFrvpb6dUNyNHdqjzWckU=';
        style-src 'self' https://use.fontawesome.com;
        font-src 'self' https://use.fontawesome.com;
        default-src 'self';";
    # kubernetes.io/tls-acme: "true"
  devHost: blog-dev.funkysi1701.com
  testHost: blog-test.funkysi1701.com
  prodHost: blog.funkysi1701.com
  # tls: []
  tls:
    - secretName: blog-dev.funkysi1701.com
      hosts:
        - blog-dev.funkysi1701.com
    - secretName: blog-test.funkysi1701.com
      hosts:
        - blog-test.funkysi1701.com
    - secretName: blog.funkysi1701.com
      hosts:
        - blog.funkysi1701.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
    # cpu: 100m
    # memory: 228Mi
  # requests:
    # cpu: 100m
    # memory: 228Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
dnsPolicy: None
dnsConfig:
  nameservers:
    - 192.168.2.212
configuration:
  develop:
    HUGO_BASEURL: "https://blog-dev.funkysi1701.com"
  test:
    HUGO_BASEURL: "https://blog-test.funkysi1701.com"
  main:
    HUGO_BASEURL: "https://blog.funkysi1701.com"    